---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "debezium.name" . }}
  labels:
    {{- include "debezium.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "debezium.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ toJson .Values | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9071"
      labels:
        {{- include "debezium.selectorLabels" . | nindent 8 }}
    spec:
      automountServiceAccountToken: false
      imagePullSecrets:
      - name: gitlab-docker-registry
      volumes:
      - name: opt-prometheus
        emptyDir: {}
      - name: secrets
        secret:
          secretName: {{ include "debezium.name" . }}
          defaultMode: 0744
      - name: config
        configMap:
          name: {{ include "debezium.name" . }}
          defaultMode: 0744
      initContainers:
      - name: ensure-kafka-topics
        image: wurstmeister/kafka:2.13-2.7.0
        volumeMounts:
        - name: secrets
          mountPath: /etc/kafka
        - name: config
          mountPath: /opt/debezium/kafka.sh
          subPath: kafka.sh
        - name: config
          mountPath: /etc/debezium/connector.json
          subPath: connector.json
        - name: config
          mountPath: /kafka/config/log4j.properties
          subPath: log4j.properties
        - name: config
          mountPath: /kafka/config/admin.properties
          subPath: admin.properties
        env:
        - name: KAFKA_OPTS
          value: -Djava.security.auth.login.config=/etc/kafka/jaas.conf
        - name: KAFKA_HEAP_OPTS
          value: -Xms256m -Xmx256m
        - name: KAFKA_LOG4J_OPTS
          value: -Dlog4j.configuration=file:/kafka/config/log4j.properties
        command: ['/bin/sh', '-c', '/opt/debezium/kafka.sh']
      - name: jmx-install
        image: busybox:latest
        volumeMounts:
        - name: opt-prometheus
          mountPath: /opt/prometheus
        command: ['wget', '--quiet', '--no-check-certificate', '--output-document', '/opt/prometheus/jmx_exporter_javaagent.jar', 'https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.15.0/jmx_prometheus_javaagent-0.15.0.jar']
      containers:
      - name: connector
        image: {{ .Values.debezium.image }}
        securityContext:
          capabilities:
            drop: [ALL]
        volumeMounts:
        - name: secrets
          mountPath: /etc/kafka
        - name: config
          mountPath: /etc/debezium/connector.json
          subPath: connector.json
        - name: config
          mountPath: /etc/prometheus/jmx_exporter.yml
          subPath: jmx_exporter.yml
        - name: config
          mountPath: /health.sh
          subPath: health.sh
        - name: config
          mountPath: /kafka/config/log4j.properties
          subPath: log4j.properties
        - name: config
          mountPath: /kafka/config/connect-distributed.properties
          subPath: connect-distributed.properties
        - name: opt-prometheus
          mountPath: /opt/prometheus
        env:
        - name: KAFKA_OPTS
          value: -Djava.security.auth.login.config=/etc/kafka/jaas.conf -javaagent:/opt/prometheus/jmx_exporter_javaagent.jar=9071:/etc/prometheus/jmx_exporter.yml
        - name: KAFKA_HEAP_OPTS
          value: {{ .Values.kafka_heap_opts }}
        - name: KAFKA_JVM_PERFORMANCE_OPTS
          value: {{ .Values.kafka_jvm_performance_opts }}
        - name: KAFKA_LOG4J_OPTS
          value: -Dlog4j.configuration=file:/kafka/config/log4j.properties
        command: ['/kafka/bin/connect-distributed.sh', '/kafka/config/connect-distributed.properties']
        livenessProbe:
          exec:
            command: ['/bin/sh', '-c', '! curl 127.0.0.1:8083/connectors/{{ .Values.debezium.connector.name }}/status 2>/dev/null | grep -q  "state":"FAILED" && if [ "$(curl 127.0.0.1:9071 2>/dev/null | grep debezium | wc -l)" -lt "10" ]; then exit 1; else exit 0; fi']
          initialDelaySeconds: 90
          periodSeconds: 3
        lifecycle:
          postStart:
            exec:
              command: ['/bin/sh', '-c', 'sleep 60; curl --request PUT --header "Accept:application/json" --header "Content-Type:application/json" "http://127.0.0.1:8083/connectors/{{ .Values.debezium.connector.name }}/config" --data "@/etc/debezium/connector.json"']
        resources:
          requests:
            cpu: 0.1
            memory: 256Mi
          limits:
            cpu: 1
